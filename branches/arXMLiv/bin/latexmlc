#!/usr/bin/perl -w

#######################
# A Client for LaTeXML
#######################

use strict;
use FindBin;
use lib "$FindBin::RealBin/../lib";
use Pod::Usage;
use Carp;
use Cwd qw(cwd abs_path);
use IO::Socket;
use LaTeXML::Util::Pathname;

my @opts = grep ($_ =~ /^-/,@ARGV);
my @args = grep ($_ !~ /^-/,@ARGV);

#Need to make all paths absolute
my ($port) = map {$_=~/(\d+)/; $1;} grep {$_ =~ /^--port=(\d+)/;} @opts;
my ($mode) = map {$_=~/--mode=(\w+)/; $1;} grep {$_ =~ /^--mode=(\w+)/;} @opts;
$mode="standard" unless $mode; #Default is standard
my %portlist = ( math=>3334, fragment=>3344, standard=>3354);
$port = $portlist{$mode} unless $port;
$port = 3334 unless $port; #Fall back to 3334 if all fails...

#***************************************************************************
#Add some basedir, so that relative paths work
my $cdir = abs_path(cwd());
$cdir =~ s/ /\\ /g;
my ($basedir) = map {$_=~/(\S+)/; $1;} grep {$_ =~ /^--basedir=(\S+)$/;} @opts;
push(@opts,'--basedir='.$cdir) unless $basedir;

#***************************************************************************
#Setup client and communicate
my $sock = new IO::Socket::INET
  ( PeerAddr => '127.0.0.1',
    PeerPort => $port,
    Proto => 'tcp',
  ); #Attempt connecting to a service
unless ($sock) {
  #Startup daemon with @opts and feed in args
  push(@opts,'--path='.$cdir);#add current path
  system('latexmls',@opts);
}
#Daemon is running, feed in @args and @opts
$sock = new IO::Socket::INET 
  ( PeerAddr => '127.0.0.1',
    PeerPort => $port,
    Proto => 'tcp',
  );
croak "Could not create socket: $!\n" unless $sock; 
foreach my $arg(@args) {
  my ($text,$batch);
  $sock->send(join(" ",@opts)."\n".$arg."\nEND REQUEST\n");
  do {
    $sock->recv($batch,1024);
    $text.=$batch;
  } while ($batch);
  print $text;
}
close($sock);

#**********************************************************************
__END__

=head1 NAME

C<latexmlc> - A client for latexml, latexmlpost and latexmlmath.

=head1 SYNOPSIS

See latexmls for allowed options.

=head1 DESCRIPTION

latexmlc provides a client which automatically sets up a LaTeXML local server if necessary
(via latexmls).

If such server already exists, the client proceeds to communicate normally.

=head1 SEE ALSO

L<latexmlc>, L<latexmld>, L<latexml>, L<latexmlpost>, L<latexmlmath>, L<LaTeXML>

=cut
#**********************************************************************

