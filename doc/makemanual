#!/usr/bin/perl -w
use strict;
use FindBin;
use lib "$FindBin::RealBin/../blib/lib";
use Carp;
use Getopt::Long qw(:config no_ignore_case);
use Pod::Usage;

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
my $WORKDIR   = $FindBin::RealBin;
my $SRCDIR    = $WORKDIR."/..";
my $BINDIR    = $WORKDIR."/../blib/script";

my $DEST      = "/local/www/site/htdocs/DigitalMathLib/LaTeXML";
my $MANDEST   = "$DEST/manual";

my $identity = "makemanual (part of LaTeXML)";
my($forcepod,$forceschema)=(0,0);
my($makepdf,$makehtml)=(0,1);
my($help,$showversion)=(0,0);
GetOptions("forcepod!"    => \$forcepod,
	   "forceschema!" => \$forceschema,
	   "pdf!"         => \$makepdf,
	   "html!"        => \$makehtml,
	   "help"         => \$help,
	  ) or pod2usage(-message => $identity, -exitval=>1, -verbose=>0, -output=>\*STDERR);
pod2usage(-message=>$identity, -exitval=>1, -verbose=>2, -output=>\*STDOUT) if $help;
if($showversion){ print STDERR "$identity\n"; exit(1); }

BEGIN { $SIG{__DIE__} = \&confess; }

#======================================================================
# Generate Appendices from PODS, Schema, etc
print "".('='x60)."\nGenerating Appendices\n";
system("manual/genpods".($forcepod ? " --force":""))==0
  or warn "Failed to generate pods?";
system("manual/genschema".($forceschema ? " --force":""))==0
  or warn "Failed to generate schema documentation?";

#======================================================================
# Generate pdf form of manual
#======================================================================
# Would be nice to avoid running if uptodate
if($makepdf){
  print "".('='x60)."\nGenerating manual.pdf\n";
  system("pdflatex manual") == 0 or warn "pdflatex of manual failed(?):$!";
  system("makeindex -s manual.ist manual") == 0 or warn "makeindex of manual failed(?):$!";
  # Can I be smart about how many times it needs to run?
  system("pdflatex manual") == 0 or warn "pdflatex of manual failed(?):$!";
}
#======================================================================
# Generate html form of manual
#======================================================================
# Would be nice to avoid running if uptodate
if($makehtml){
  print "".('='x60)."\nGenerating html for manual\n";
  system("$BINDIR/latexml --dest=manual/manual.xml manual/manual")==0
    or die "Failed to convert Manual to XML";
  system("$BINDIR/latexmlpost"
	 ." --dest=$DEST/manual/index.xhtml"
	 ." --split  --splitnaming=labelrelative"
	 ." --urlstyle=server"
	 ." --css=../latexmldoc.css"
	 ." manual/manual") ==0
	   or die "Failed to postprocess manual";
}

# Huh? This doesn't belong here!!!
##  pathname_copy("$SRCDIR/Changes","$DEST/Changes");

#======================================================================
__END__

=head1 NAME

C<makemanual> - generate manual for LaTeXML

=head1 SYNOPSIS

makemanual [options]

 Options:
  --forcepod        Force regeneration of LaTeX from POD documentation
                    (default: only if needed)
  --forceschema     Force regeneration of LaTeX from Schema definition.
                    (default: only if needed)
  --pdf             Generate manual.pdf (default: yes)
  --html            Generate html documentation (default: yes)
  --help            Shows this help.
  --version         Shows the LaTeXML version.

=cut
#**********************************************************************
