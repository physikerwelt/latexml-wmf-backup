# -*- CPERL -*-
# /=====================================================================\ #
# |  DLMFsupport                                                        | #
# | Implementation for LaTeXML                                          | #
# |=====================================================================| #
# | Part of LaTeXML:                                                    | #
# |  Public domain software, produced as part of work done by the       | #
# |  United States Government & not subject to copyright in the US.     | #
# |---------------------------------------------------------------------| #
# | Bruce Miller <bruce.miller@nist.gov>                        #_#     | #
# | http://dlmf.nist.gov/LaTeXML/                              (o o)    | #
# \=========================================================ooo==U==ooo=/ #
package LaTeXML::Package::Pool;
use strict;
use LaTeXML::Package;
use LaTeXML::Util::Pathname;

# This collects some common support definitions for 
#   DLMF.cls.ltxml, DLMFpage.cls.ltx, etc
#**********************************************************************
# Document
#**********************************************************************
RelaxNGSchema("DLMF");

RequirePackage('graphicx');
RequirePackage('color');
RequirePackage('amsmath');
RequirePackage('amssymb');
RequirePackage('DLMFmath');
RequirePackage('url');
RequirePackage('comment');
RequirePackage('tabularx');
RequirePackage('latexml');

#**********************************************************************
# Find the source file date from the CVS data.

# Returns a hash of filesnames=>cvs revision number

our @MonthNames=(qw( January February March April May June
		     July August September October November December));
our %cvsmonths=( Jan=>1, Feb=>2, Mar=>3, Apr=>4, May=>5, Jun=>6,
		 Jul=>7, Aug=>8, Sep=>9, Oct=>10, Nov=>11, Dec=>12);

DefMacro('\@source@date',sub {
  my $pathname = LookupValue('SOURCEFILE');
  my($dir,$name,$ext)=pathname_split($pathname);
  my $file = $name;
  $file .= ".$ext" if $ext;
  my $date;
  if(open(CVS,"$dir/CVS/Entries")){
    my($version,$wday,$mon,$mday,$time,$year);
    while(<CVS>){
      if(m|^/\Q$file\E/([^/]*)/(\w+)\s+(\w+)\s+(\d+)\s+(\d+:\d+:\d+)\s+(\d+)/[^/]*/$|){
	($version,$wday,$mon,$mday,$time,$year)=($1,$2,$3,$4,$5,$6); }}
    close(CVS);
    if($year){
      $date = sprintf("%4d-%02d-%02d",$year,$cvsmonths{$mon},$mday); }}
  if(!$date){
    my ($sec,$min,$hour,$mday,$mon,$year)=localtime(pathname_timestamp($pathname));
    $date = sprintf("%4d-%02d-%02d",(1900+$year),$mon+1,$mday); }
  Explode($date); });

sub today_iso {
  sprintf("%4d-%02d-%02d",
	  LookupValue('\year')->valueOf, 
	  LookupValue('\month')->valueOf,
	  LookupValue('\day')->valueOf); }

DefMacro('\today@iso',sub { Explode(today_iso()); });

DefMacro('\@add@source@date','\@add@frontmatter{ltx:date}[role=creation]{\@source@date}');
# Redefine to use ISO format.
DefMacro('\@add@conversion@date','\@add@frontmatter{ltx:date}[role=conversion]{\today@iso}');

#**********************************************************************
# table enhancement

PushValue(ALIGNMENT_LINE_COMMANDS=>T_CS('\thinhline'));

DefConstructor('\thinhline','',
	       properties=>{isHorizontalRule=>1},
	       afterDigest=>sub { LookupValue('Alignment')->addLine('T'); });

# Paragraph similar to X
DefColumnType('P',sub {
  $LaTeXML::BUILD_TEMPLATE->addColumn(before=>Tokens(T_CS('\hbox'),T_BEGIN),
				      after=>Tokens(T_END),
				      align=>'justify'); return; });

#**********************************************************************
# More Link support.

DefConstructor('\longref [] Semiverbatim',
	       "<ltx:ref ?#1(show='#1')(show='typerefnum. title') labelref='#label'/>",
	       properties=>sub { (label=>CleanLabel($_[2])); });

DefConstructor('\longcite [] Semiverbatim',
	       "<ltx:bibref ?#1(show='#1')(show='title (author, year)') bibrefs='#2'/>");

DefConstructor('\DLMF',                '<ltx:ref href="http://dlmf.nist.gov">DLMF</ltx:ref>');
DefConstructor('\VRML Semiverbatim', "<ltx:VRML href='#1'/>");
DefConstructor('\GAMSclass{}',         "<ltx:GAMS class='#1'/>");
DefConstructor('\GAMSpackage{}',       "<ltx:GAMS package='#1'/>");
DefConstructor('\GAMSclasspackage{}{}',"<ltx:GAMS class='#1' package='#2'/>");
DefConstructor('\GAMSmodule{}{}{}',    "<ltx:GAMS package='#1' module='#2' module_id='#3'/>");

#**********************************************************************
1;
