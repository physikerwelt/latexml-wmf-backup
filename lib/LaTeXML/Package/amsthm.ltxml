# -*- CPERL -*-
# /=======================================================\ #
# |  amsthm - Implementation for LaTeXML                  | #
# |                                                       | #
# |=======================================================| #
# |  Part of LaTeXML : http://dlmf.nist.gov/LaTeXML/      | #
# | Copyright (c) 2006 arXMLiv group                      | #
# | Released under the GNU Public License                 | #
# \=======================================================/ #

package LaTeXML::Package::Pool;
use strict;
use LaTeXML::Package;

DefPrimitive('\newtheorem OptionalMatch:* {}[]{}[]', sub {
	       my ($stomach, $flag, $thmset, $otherthmset, $text, $reset) = @_;
	       $thmset = $thmset->toString;
	       $text = $text->toString;
	       $reset = $reset ? $reset->toString : undef;

	       # compute the counter for this theorem set:
	       my $counter = $otherthmset ? LookupValue('THM:counter:'.$otherthmset->toString) : undef;
	       unless ($counter) {
		 $counter = 'THM@'.$thmset;
		 NewCounter($counter, $reset,
			    idprefix => 'Thm'); }

	       AssignValue('THM:counter:'.$thmset => $counter);
	       my $bodyfont = LookupValue('THM:bodyfont');
	       my $headerfont = LookupValue('THM:headerfont');
	       $headerfont = $headerfont ? $headerfont->toString : '';
	       my $punctuation = LookupValue('THM:punctuation');
	       my $numberpos = LookupValue('THM:numberpos');

	       # @HELP: Extend LaTeXML.dtd for this new tag ?
	       DefEnvironment("{$thmset}[]",
			      "<ltx:theorem id='#id' refnum='#refnum' ?#1(for='#1')()>#body</ltx:theorem>",
			      afterDigestBegin => sub {
				my @res = $text ? Digest(TokenizeInternal('{'.$headerfont
									  .'\thm@header@{'.$numberpos.'}{'.$punctuation
									  .'}{'.$text.'}}')) : ();
				# so that we generate a <header> tag and the new font is activated for the #body
				return (@res, $bodyfont ? Digest($bodyfont) : ()); },
			      properties => sub {
				if ($counter) {
				  $flag ? refStepID($counter) : refStepCounter($counter) ; }},
			      scope => 'global');
	     });

DefConstructor('\thm@header@{}{}{}', "<ltx:caption position='#1' separator='#2'>#3</ltx:caption>",
	       mode=>'text');

AssignValue('THM:numberpos' => 'right');
DefMacro('\swapnumbers', sub {
	   my $pos = LookupValue('THM:numberpos') || 'right';
	   if ($pos eq 'right') { $pos = 'left'; }
	   else { $pos = 'right'; }
	   AssignValue('THM:numberpos' => $pos);
	   return; });

# activate a certain theorem style
DefMacro('\theoremstyle{}', sub { T_CS('\@thm@style@'.$_[1]->toString) });

# the default theorem styles
sub PlainThmStyle {
  AssignValue('THM:headerfont' => T_CS('\bfseries'));
  AssignValue('THM:bodyfont' => T_CS('\itshape'));
  AssignValue('THM:punctuation', '.');
  return; }
DefMacro('\@thm@style@plain', \&PlainThmStyle);

# activate plain style by default:
PlainThmStyle;

sub DefinitionThmStyle {
  AssignValue('THM:headerfont' => T_CS('\bfseries'));
  AssignValue('THM:bodyfont' => T_CS('\normalfont'));
  AssignValue('THM:punctuation', '.');
  return; }

DefMacro('\@thm@style@definition', \&DefinitionThmStyle);

sub RemarkThmStyle {
  AssignValue('THM:headerfont' => T_CS('\itshape'));
  AssignValue('THM:bodyfont' => T_CS('\normalfont'));
  AssignValue('THM:punctuation', '.');
  return; }

DefMacro('\@thm@style@remark', \&RemarkThmStyle);

#\newtheoremstyle{note}% name
#  {3pt}%      Space above
#  {3pt}%      Space below
#  {}%         Body font
#  {}%         Indent amount (empty = no indent, \parindent = para indent)
#  {\itshape}% Thm head font
#  {:}%        Punctuation after thm head
#  {.5em}%     Space after thm head: " " = normal interword space;
#        %       \newline = linebreak
#  {}%         Thm head spec (can be left empty, meaning `normal')

DefPrimitive('\newtheoremstyle{}{}{}{}{}{}{}{}{}', sub {
	       my $name = $_[1]->toString;
	       my $bodyfont = $_[4];
	       my $headerfont = $_[6];
	       my $punctuation = $_[7]->toString;
	       # we ignore the rest of the parameters

	       DefMacro('\@thm@style@'.$name, sub {
			  AssignValue('THM:bodyfont', $bodyfont);
			  AssignValue('THM:headerfont', $headerfont);
			  AssignValue('THM:punctuation', $punctuation);
			  return; });
	     });

DefMacro('\qed', '');    # mark somehow end of proof ? I think no.
DefMacro('\qedhere', '');

foreach my $env(qw(proof pf)) {
  DefEnvironment("{$env} []", "<ltx:proof ?#1(display='#1')(display='Proof')>#body</ltx:proof>"); }


# from older versions of amsthm.sty
DefPrimitive('\theorembodyfont{}', sub { AssignValue('THM:bodyfont' => $_[1]); });
DefPrimitive('\theoremheaderfont{}', sub { AssignValue('THM:headerfont' => $_[1]); });
DefMacro('\theorempreskipamount', '');
DefMacro('\theorempostskipamount', '');

1;
