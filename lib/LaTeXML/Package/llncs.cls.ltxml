#  /====================================================================\
# | llncs.cls for LaTeXML                                                |
# | Generated by texscan --stub --base=article.cls llncs.cls             |
#  >====================================================================<
# | Released to public domain.                                           |
# | Bruce Miller <bruce.miller@nist.gov>                                 |
# | http://dlmf.nist.gov/LaTeXML/                                        |
#  \====================================================================/
use strict;
use LaTeXML::Package;

foreach my $option (qw(envcountreset citeauthoryear oribibl orivec
	envcountsame envcountsect runningheads openbib)){
  DeclareOption($option,undef); }

ProcessOptions();
LoadClass('article',withoptions=>1);

RequirePackage('multicol');

#======================================================================
DefMacro('\frontmatter',Tokens());

DefMacro('\subtitle{}', '\@add@frontmatter{ltx:subtitle}{#1}');

DefMacro('\inst{}',""); #?
DefConstructor('\@institute{}',"<ltx:contact role='institute'>#1</ltx:contact>", bounded=>1);
DefMacro('\institute{}','\@add@to@frontmatter{ltx:creator}{\@institute{#1}}');
DefConstructor('\email Semiverbatim',"<ltx:ref href='mailto:#1'>#1</ltx:ref>");
DefConstructor('\url Semiverbatim',"<ltx:ref href='#1'>#1</ltx:ref>");

# DefMacro('\institutename',  Tokens());

# DefMacro('\authcount',Tokens());

DefRegister('\instindent'=>Dimension(0));

# DefMacro('\lastand',Tokens());

DefRegister('\authrun'=>Tokens()); # Box!
DefRegister('\authorrunning'=>Tokens());
DefRegister('\tocauthor'=>Tokens()); # Box!
DefRegister('\titrun'=>Tokens());    # Box!
DefRegister('\titlerunning'=>Tokens());
DefRegister('\toctitle{}'=>Tokens());

DefRegister('\tocchpnum'=>Dimension(0));
DefRegister('\tocsecnum'=>Dimension('15pt'));
DefRegister('\tocsubsecnum'=>Dimension('23pt'));
DefRegister('\tocsubsubsecnum'=>Dimension('27pt'));
DefRegister('\tocparanum'=>Dimension('35pt'));
DefRegister('\tocsubparanum'=>Dimension('43pt'));
DefRegister('\tocsectotal'=>Dimension(0));
DefRegister('\tocsubsectotal'=>Dimension(0));
DefRegister('\tocsubsubsectotal'=>Dimension(0));
DefRegister('\tocparatotal'=>Dimension(0));

DefMacro('\addcontentsmark{}{}{}',Tokens());
DefMacro('\addcontentsmarkwop{}{}{}',Tokens());
DefMacro('\addnumcontentsmark{}{}{}',Tokens());
DefMacro('\addtocmark[]{}{}{}',Tokens());

#======================================================================
DefMacro('\mainmatter',Tokens());

NewCounter('chapter', 'document',idprefix=>'Pt', nested=>['section']);
DefMacro('\thesection','\arabic{chapter}');
DefMacro('\chaptermark{}',Tokens());

# \spnewtheorem*{env}[numberedlike]{caption}[within]{capfont}{bodyfont}
# NOTE: Can I use latex's \newtheoremstyle, or do I need to copy & adapt it?
# Seems to be the same as \newtheoremstyle, but with additonal capfont & bodyfont
DefMacro('\spnewtheorem OptionalMatch:* {}[]{}[] {}{}', sub {
  my ($stomach, $flag, $thmset, $otherthmset, $text, $reset, $capfont, $bodyfont) = @_;
  $thmset = ToString($thmset);
  $otherthmset = $otherthmset && ToString($otherthmset);
  $text   = undef unless $text->unlist;
  $reset  = $reset ? ToString($reset) : undef;

  my $counter = $otherthmset || $thmset;
  my $swap    = LookupValue('thm@swap') eq 'S';

  if(!$otherthmset){
    NewCounter($counter, $reset,
	       idprefix => "Thm$counter");
    DefMacroI(T_CS("\\the$counter"),undef,
	      "\\csname the$reset\\endcsname\\\@thmcountersep\\arabic{$counter}",
	      scope=>'global')
      if $reset; }

  DefEnvironment("{$thmset} OptionalUndigested",
		 "<ltx:theorem xml:id='#id' refnum='#refnum' class='$thmset'>"
		 . "<ltx:title>#title</ltx:title>"
		 .  "#body"
		 ."</ltx:theorem>",

		 afterDigestBegin=> sub {
		   my($stomach,$whatsit)=@_;
		   my $note = $whatsit->getArg(1);
		   my $refnum = $whatsit->getProperty('refnum');
		   my($a,$b) = ($swap ? ($refnum,$text) : ($text,$refnum));
		   my @toks=(T_BEGIN,$capfont->unlist);
		   push(@toks,
			($a ? $a->unlist :()),
			($a && $b ? (T_SPACE):()),
			($b ? $b->unlist : ()));
		   if($note){
		     push(@toks,T_SPACE,T_OTHER('(')) if $text;
		     push(@toks,$note->unlist);
		     push(@toks,T_OTHER(')')) if $text; }
		   push(@toks,T_CS('\the'),T_CS('\thm@headpunct'),T_END);
		   $whatsit->setProperties(title=>Digest(Tokens(@toks)));

		   Digest($bodyfont); },
		 ($counter 
		  ? (properties => sub {
		       ($flag ? RefStepID($counter) : RefStepCounter($counter));})
		  :()),
		 scope => 'global');
});

RawTeX(<<'EOTeX');
\spnewtheorem{theorem}{Theorem}[section]{\bfseries}{\itshape}
\spnewtheorem*{claim}{Claim}{\itshape}{\rmfamily}
\spnewtheorem*{proof}{Proof}{\itshape}{\rmfamily}
\spnewtheorem{case}{Case}{\itshape}{\rmfamily}
\spnewtheorem{conjecture}{Conjecture}{\itshape}{\rmfamily}
\spnewtheorem{corollary}{Corollary}{\bfseries}{\itshape}
\spnewtheorem{definition}{Definition}{\bfseries}{\rmfamily}
\spnewtheorem{example}{Example}{\itshape}{\rmfamily}
\spnewtheorem{exercise}{Exercise}{\bfseries}{\rmfamily}
\spnewtheorem{lemma}{Lemma}{\bfseries}{\itshape}
\spnewtheorem{note}{Note}{\itshape}{\rmfamily}
\spnewtheorem{problem}{Problem}{\bfseries}{\rmfamily}
\spnewtheorem{property}{Property}{\itshape}{\rmfamily}
\spnewtheorem{proposition}{Proposition}{\bfseries}{\itshape}
\spnewtheorem{question}{Question}{\itshape}{\rmfamily}
\spnewtheorem{solution}{Solution}{\bfseries}{\rmfamily}
\spnewtheorem{remark}{Remark}{\itshape}{\rmfamily}
EOTeX

#======================================================================
DefConstructor('\bbbc',  "\x{2102}");#not sure if ok for the ones NOT of type I$
DefConstructor('\bbbf',  "\x{1D53D}");
DefConstructor('\bbbh',  "\x{210D}");
DefConstructor('\bbbk',  "\x{1D542}");
DefConstructor('\bbbm',  "\x{1D544}");
DefConstructor('\bbbn',  "\x{2115}");
DefConstructor('\bbbone',"\x{1D7D9}");
DefConstructor('\bbbp',  "\x{2119}");
DefConstructor('\bbbq',  "\x{211A}");
DefConstructor('\bbbr',  "\x{211D}");
DefConstructor('\bbbs',  "\x{1D54A}");
DefConstructor('\bbbt',  "\x{1D54B}");
DefConstructor('\bbbz',  "\x{2124}");

DefMath('\getsto', "\x{21C6}", role=>'ARROW');
DefMath('\lid',   "\x{2266}", role=>'RELOP', meaning=>'less-than-or-equals');
DefMath('\gid',   "\x{2267}", role=>'RELOP', meaning=>'greater-than-or-equals');
DefMath('\grole', "\x{2277}", role=>'RELOP', meaning=>'greater-than-or-less-than');

DefConstructor('\squareforqed',
	       "?#isMath(<ltx:XMTok role='PUNCT'>\x{220E}</ltx:XMTok>)(\x{220E})");
Let('\qed','\squareforqed');

#======================================================================
DefMacro('\backmatter',Tokens());

#======================================================================
DefMacro('\ackname',        'Acknowledgement.');
DefMacro('\andname',        'and');
DefMacro('\chaptername',    'Chapter');
DefMacro('\claimname',      'Claim');
DefMacro('\conjecturename', 'Conjecture');
DefMacro('\contriblistname','List of Contributors');
DefMacro('\corollaryname',  'Corollary');
DefMacro('\definitionname', 'Definition');
DefMacro('\examplename',    'Example');
DefMacro('\exercisename',   'Exercise');
DefMacro('\keywordname',    '\textbf{Key words:}');
DefMacro('\lastandname',    ', and');
DefMacro('\lemmaname',      'Lemma');
DefMacro('\mailname',       '\textit{Correspondence to}:');
DefMacro('\noteaddname',    'Note added in proof');
DefMacro('\notename',       'Note');
DefMacro('\problemname',    'Problem');
DefMacro('\proofname',      'Proof');
DefMacro('\propertyname',   'Property');
DefMacro('\propositionname','Proposition');
DefMacro('\questionname',   'Question');
DefMacro('\remarkname',     'Remark');
DefMacro('\seename',        'see');
DefMacro('\solutionname',   'Solution');
DefMacro('\subclassname',   '\textit{Subject Classification}:');
DefMacro('\theoremname',    'Theorem');

DefRegister('\fnindent'=>Dimension(0));
DefMacro('\fnmsep','${}^{,}$');
DefMacro('\fnnstart','0');

DefMacro('\calctocindent',Tokens());
DefMacro('\clearheadinfo',Tokens());
DefRegister('\headlineindent'=>Dimension(0));
DefMacro('\thisbottomragged',Tokens());
Let(T_CS('\ts'),T_CS('\,'));
DefEnvironment('{theopargself}','#body');
DefMacro('\homedir',"\~{ }");
DefMacro('\idxquad','\hskip 10pt\relax');
#======================================================================

#  /--------------------------------------------------------------------\
# | INCOMPLETE IMPLEMENTATION                                            |
# | remove this comment, when done.                                      |
#  \--------------------------------------------------------------------/

# DefMacro('\hyperhrefextend',Tokens());






1;
