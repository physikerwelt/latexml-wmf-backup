# /=====================================================================\ 
# |  LaTeXML-picture.rnc                                                |
# | RelaxNG model for LaTeXML generated documents                       |
# |=====================================================================|
# | Part of LaTeXML:                                                    |
# |  Public domain software, produced as part of work done by the       |
# |  United States Government & not subject to copyright in the US.     |
# |=====================================================================|
# | Bruce Miller <bruce.miller@nist.gov>                        #_#     |
# | http://dlmf.nist.gov/LaTeXML/                              (o o)    |
# \=========================================================ooo==U==ooo=/

# ======================================================================
# Picture; Experimental, possibly should evolve to SVG?
# ======================================================================

default namespace = "http://dlmf.nist.gov/LaTeXML"
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"

## This module defines a picture environment, roughly a subset of SVG.
## NOTE: Consider whether it is sensible to drop this and incorporate SVG itself.
Misc.class |= picture

Picture.class = g | rect | line | circle | path
 | arc | wedge | ellipse | polygon | bezier
 | parabola | curve | dots | grid | clip



## These attributes correspond roughly to SVG, but need documentation.
Picture.attributes =
  attribute x { text }?,
  attribute y { text }?,
  attribute r { text }?,
  attribute rx { text }?,
  attribute ry { text }?,
  attribute width { text }?,
  attribute height { text }?,
  attribute fill { text }?,
  attribute stroke { text }?,
  attribute stroke-width { text }?,
  attribute stroke-dasharray { text }?,
  attribute transform { text }?,
  attribute terminators { text }?,
  attribute arrowlength { text }?,
  attribute points { text }?,
  attribute showpoints { text }?,
  attribute displayedpoints { text }?,
  attribute arc { text }?,
  attribute angle1 { text }?,
  attribute angle2 { text }?,
  attribute arcsepA { text }?,
  attribute arcsepB { text }?,
  attribute curvature { text }?

## These attributes correspond roughly to SVG, but need documentation.
PictureGroup.attributes =
  attribute pos { text }?,
  attribute framed {xsd:boolean}?,
  [ a:defaultValue = "rect" ]
  attribute frametype { "rect" | "circle" | "oval" }?,
  attribute fillframe {xsd:boolean }?,
  attribute boxsep { text }?,
  attribute shadowbox {xsd:boolean}?,
  attribute doubleline {xsd:boolean}?

picture.attribs = Common.attributes,ID.attributes,Picture.attributes,Imageable.attributes,
  attribute clip {xsd:boolean}?,
  attribute baseline { text }?,
  attribute unitlength { text }?,
  attribute xunitlength { text }?,
  attribute yunitlength { text }?,
  attribute tex { text }?,
  attribute content-tex { text }?
picture.model = (Picture.class | Inline.class | Misc.class | Meta.class)*
## A picture environment.
picture = element picture {picture.attribs,picture.model}

g.attribs = Common.attributes,Picture.attributes,PictureGroup.attributes
g.model = (Picture.class | Inline.class | Misc.class | Meta.class)*
## A graphical grouping; the content is inherits by the transformations, 
## positioning and other properties.
g = element g {g.attribs,g.model}

rect.attribs = Common.attributes,Picture.attributes
rect.model = empty
## A rectangle within a \elementref{picture}.
rect = element rect {rect.attribs,rect.model}

line.attribs = Common.attributes,Picture.attributes
line.model = empty
## A line within a \elementref{picture}.
line = element line {line.attribs,line.model}

polygon.attribs = Common.attributes,Picture.attributes
polygon.model = empty

## A polygon within a \elementref{picture}.
polygon = element polygon {polygon.attribs,polygon.model}

wedge.attribs = Common.attributes,Picture.attributes
wedge.model =empty
## A wedge within a \elementref{picture}.
wedge = element wedge {wedge.attribs,wedge.model}

arc.attribs = Common.attributes,Picture.attributes
arc.model = empty
## An arc within a \elementref{picture}.
arc = element arc {arc.attribs,arc.model}

circle.attribs = Common.attributes,Picture.attributes
circle.model = empty
## A circle within a \elementref{picture}.
circle = element circle {circle.attribs,circle.model}

ellipse.attribs = Common.attributes,Picture.attributes
ellipse.model =empty
## An ellipse within a \elementref{picture}.
ellipse = element ellipse {ellipse.attribs,ellipse.model}

path.attribs = Common.attributes,Picture.attributes
path.model = empty
## A path within a \elementref{picture}.
path = element path {path.attribs,path.model}

bezier.attribs = Common.attributes,Picture.attributes
bezier.model = empty
## A bezier curve within a \elementref{picture}.
bezier = element bezier {bezier.attribs,bezier.model}

curve.attribs = Common.attributes,Picture.attributes
curve.model = empty
## A curve within a \elementref{picture}.
curve = element curve {curve.attribs,curve.model}

parabola.attribs = Common.attributes,Picture.attributes
parabola.model = empty
## A parabola curve within a \elementref{picture}.
parabola = element parabola {parabola.attribs,parabola.model}

dots.attribs = Common.attributes,Picture.attributes
dots.model = empty
## A sequence of dots (?) within a \elementref{picture}.
dots = element dots {dots.attribs,dots.model}

grid.attribs = Common.attributes,Picture.attributes
grid.model = empty
## A grid within a \elementref{picture}.
grid = element grid {grid.attribs, grid.model}

clip.attribs = Common.attributes,Picture.attributes
clip.model = clippath*
## Establishes a clipping region within a \elementref{picture}.
clip = element clip {clip.attribs,clip.model}

clippath.attribs = Common.attributes,Picture.attributes
clippath.model = (Picture.class | Inline.class | Misc.class | Meta.class)*
## Establishes a clipping region within a \elementref{picture}.
clippath = element clippath {clippath.attribs,clippath.model}

