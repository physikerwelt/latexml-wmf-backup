# /=====================================================================\ 
# |  LaTeXML-structure.rnc                                              |
# | RelaxNG model for LaTeXML generated documents                       |
# |=====================================================================|
# | Part of LaTeXML:                                                    |
# |  Public domain software, produced as part of work done by the       |
# |  United States Government & not subject to copyright in the US.     |
# |=====================================================================|
# | Bruce Miller <bruce.miller@nist.gov>                        #_#     |
# | http://dlmf.nist.gov/LaTeXML/                              (o o)    |
# \=========================================================ooo==U==ooo=/

default namespace = "http://dlmf.nist.gov/LaTeXML"

#======================================================================

document.attribs = Sectional.attributes
document.model = (FrontMatter.class | SectionalFrontMatter.class | Meta.class | titlepage)*,
  document.body.class*,
  BackMatter.class*
## The document root.
document = element document {document.attribs,document.model}

## The content allowable as the main body of the document.
document.body.class = Para.model | paragraph | subsubsection | subsection | section | chapter | part

#----------------------------------------------------------------------

part.attribs =  Sectional.attributes
part.model = SectionalFrontMatter.class*,part.body.class*
## A part within a document.
part = element part {part.attribs,part.model}

## The content allowable as the main body of a part.
part.body.class = Para.model | chapter

#----------------------------------------------------------------------

chapter.attribs = Sectional.attributes
chapter.model = SectionalFrontMatter.class*,chapter.body.class*
## A Chapter within a document.
chapter = element chapter {chapter.attribs, chapter.model}

## The content allowable as the main body of a chapter.
chapter.body.class = Para.model | subparagraph | paragraph | subsubsection | subsection | section

#----------------------------------------------------------------------

section.attribs = Sectional.attributes
section.model = SectionalFrontMatter.class*,section.body.class*
## A Section within a document.
section = element section {section.attribs,section.model}

## The content allowable as the main body of a section.
section.body.class = Para.model | subparagraph | paragraph | subsubsection | subsection

#----------------------------------------------------------------------

appendix.attribs = Sectional.attributes
appendix.model = SectionalFrontMatter.class*,appendix.body.class*
## An Appendix within a document.
appendix = element appendix {appendix.attribs,appendix.model}

## The content allowable as the main body of a chapter.
appendix.body.class = Para.model | subparagraph | paragraph | subsubsection | subsection | section

#----------------------------------------------------------------------

subsection.attribs = Sectional.attributes
subsection.model = SectionalFrontMatter.class*,subsection.body.class*
## A Subsection within a document.
subsection = element subsection {subsection.attribs, subsection.model}

## The content allowable as the main body of a chapter.
subsection.body.class = Para.model | subparagraph | paragraph | subsubsection

#----------------------------------------------------------------------

subsubsection.attribs = Sectional.attributes
subsubsection.model = SectionalFrontMatter.class*,subsubsection.body.class*
## A Subsubsection within a document.
subsubsection = element subsubsection {subsubsection.attribs, subsubsection.model}

## The content allowable as the main body of a chapter.
subsubsection.body.class = Para.model | subparagraph | paragraph

#----------------------------------------------------------------------

paragraph.attribs = Sectional.attributes
paragraph.model = SectionalFrontMatter.class*,paragraph.body.class*
## A Paragraph within a document. This corresponds to a `formal' marked, possibly labelled
## LaTeX Paragraph,  in distinction from an unlabelled logical paragraph.
paragraph = element paragraph {paragraph.attribs,paragraph.model}

## The content allowable as the main body of a chapter.
paragraph.body.class = Para.model | subparagraph

#----------------------------------------------------------------------

subparagraph.attribs = Sectional.attributes
subparagraph.model = SectionalFrontMatter.class*,subparagraph.body.class*
## A Subparagraph within a document.
subparagraph = element subparagraph {subparagraph.attribs,subparagraph.model}

## The content allowable as the main body of a chapter.
subparagraph.body.class = Para.model

#----------------------------------------------------------------------

bibliography.attribs = Sectional.attributes,
  ## the list of bib files used to create the bibliograph.
  attribute files { text }?
bibliography.model = FrontMatter.class*,SectionalFrontMatter.class*,bibliography.body.class*
## A Bibliography within a document.
bibliography = element bibliography {bibliography.attribs,bibliography.model}

## The content allowable as the main body of a chapter.
bibliography.body.class = Para.model | biblist

#----------------------------------------------------------------------

index.attribs = Sectional.attributes
index.model = SectionalFrontMatter.class*,index.body.class*
## An Index within a document.
index = element index {index.attribs,index.model}

## The content allowable as the main body of a chapter.
index.body.class = Para.model | indexlist

indexlist.attribs = Common.attributes,ID.attributes
indexlist.model = indexentry*
## A hierarchical index generated. Typically generated during postprocessing
## from the collection of \elementref{indexmark} in the document
## (or document collection).
indexlist = element indexlist {indexlist.attribs,indexlist.model}

indexentry.attribs = Common.attributes,ID.attributes
indexentry.model = indexphrase, indexrefs?, indexlist?
## An entry in an \elementref{indexlist} consisting of a phrase, references to
## points in the document where the phrase was found, and possibly
## a nested \elementref{indexlist} represented index levels below this one.
indexentry = element indexentry {indexentry.attribs,indexentry.model}

indexrefs.attribs =  Common.attributes
indexrefs.model = Inline.model
## A container for the references (\elementref{ref}) to where an \elementref{indexphrase} was
## encountered in the document. The model is Inline to allow
## arbitrary text, in addition to the expected \elementref{ref}'s.
indexrefs = element indexrefs {indexrefs.attribs,indexrefs.model}

#======================================================================

title.attribs = Common.attributes
title.model = Inline.model
## The title of a document, section or similar document structure container.
title = element title {title.attribs,title.model}

toctitle.attribs = Common.attributes
toctitle.model = Inline.model
## The short form of a title, for use in tables of contents or similar.
toctitle = element toctitle {toctitle.attribs,toctitle.model}

subtitle.attribs = Common.attributes
subtitle.model = Inline.model
## A subtitle, or secondary title.
subtitle = element subtitle {subtitle.attribs,subtitle.model}

# NOTE: This should be aligned with Bibname.

personname.attribs = Common.attributes
personname.model = Inline.model
## A person's name.
personname = element personname {personname.attribs,personname.model}

creator.attribs = Common.attributes,
  ## indicates the role of the person in creating the docment.
  ## Commonly useful values are specified, but is open-ended to support extension.
  attribute role { "author" | "editor" | "translator" | "contributor" | "translator" | text }?
creator.model = (Person.class | Misc.class)*

## Generalized document creator.
creator = element creator {creator.attribs,creator.model}

## The content allowed in authors, editors, etc.
Person.class = personname | contact

contact.attribs = Common.attributes,
  ## indicates the type of contact information contained.
  ## Commonly useful values are specified, but is open-ended to support extension.
  attribute role { "affiliation" | "address" | "current_address" | "email" | "url"
                 | "thanks" | "dedicatory" | text }?
contact.model = Inline.model
## Generalized contact information for a document creator.
## Note that this element can be repeated to give different types 
## of contact information (using \attr{role}) for the same creator.
contact = element contact {contact.attribs,contact.model}

date.attribs = Common.attributes,
  ## indicates the relevance of the date to the document.
  ## Commonly useful values are specified, but is open-ended to support extension.
  attribute role { "creation" | "conversion" | "posted" | "received"
                 | "revised" | "accepted" | text }?
date.model = Inline.model
## Generalized document date.
## Note that this element can be repeated to give the dates
## of different events (using \attr{role}) for the same document.
date = element date {date.attribs,date.model}

abstract.attribs =   Common.attributes
abstract.model = Block.model
## A document abstract.
abstract = element abstract {abstract.attribs,abstract.model}

acknowledgements.attribs = Common.attributes
acknowledgements.model = Inline.model
## Acknowledgements for the document.
acknowledgements = element acknowledgements {acknowledgements.attribs,acknowledgements.model}

keywords.attribs = Common.attributes
keywords.model = Inline.model
## Keywords for the document. The content is freeform.
keywords = element keywords {keywords.attribs,keywords.model}

classification.attribs = Common.attributes,
  ## indicates what classification scheme was used.
  attribute scheme { text }?
classification.model = Inline.model
## A classification of the document.
classification = element classification {classification.attribs,classification.model}

#======================================================================
# Fallback

titlepage.attribs = Sectional.attributes
titlepage.model = (FrontMatter.class | SectionalFrontMatter.class | Block.class)*
## block of random stuff marked as a titlepage
titlepage = element titlepage {titlepage.attribs,titlepage.model}

#======================================================================

## Attributes shared by all sectional elements
Sectional.attributes =
  Common.attributes,
  Labelled.attributes
## The content allowed for the front matter of each sectional unit,
## and the document.

SectionalFrontMatter.class = title | toctitle | creator

## The content allowed (in addition to \patternref{SectionalFrontMatter.class})
## for the front matter of a document.
FrontMatter.class =
  subtitle | date | abstract | acknowledgements
  | keywords | classification

## The content allowed a the end of a document.
## Note that this includes random trailing Block and Para material,
## to support articles with figures and similar data appearing `at end'.
BackMatter.class = bibliography | appendix | index | acknowledgements
		 | Para.class | Meta.class
