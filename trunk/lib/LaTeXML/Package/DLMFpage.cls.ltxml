# -*- CPERL -*-
# /=====================================================================\ #
# |  DLMFpage                                                           | #
# | Implementation for LaTeXML                                          | #
# |=====================================================================| #
# | Part of LaTeXML:                                                    | #
# |  Public domain software, produced as part of work done by the       | #
# |  United States Government & not subject to copyright in the US.     | #
# |---------------------------------------------------------------------| #
# | Bruce Miller <bruce.miller@nist.gov>                        #_#     | #
# | http://dlmf.nist.gov/LaTeXML/                              (o o)    | #
# \=========================================================ooo==U==ooo=/ #
package LaTeXML::Package::Pool;
use strict;
use LaTeXML::Package;

# This collects some of DLMF.ltxml, but simplifies.
# Does not support metadata and such.
#**********************************************************************
# Document
#**********************************************************************
DocType("ltx:document","-//NIST LaTeXML//LaTeXML DLMF Chapter",'DLMF.dtd',
	'#default'=>"http://dlmf.nist.gov/LaTeXML");

RequirePackage('graphicx');
RequirePackage('amsmath');
RequirePackage('amssymb');
RequirePackage('DLMFmath');
RequirePackage('url');
RequirePackage('comment');
RequirePackage('latexml');


# Something like \label;
# Need to impose some standard format like
#   doc:about
#   doc:about.notices
#   doc:bio.FWJOlver
#   doc:help
#   doc:help.search
# and similar (?)

DefPrimitive('\thisdocument{}', sub {
  my($stomach,$label)=@_;
  $label=ToString($label);
  my $id = ($label =~ /^doc:(.*)$/ ? $1 : $label);
  DefMacro('\thedocument@ID',$id);
  AssignValue(DOCUMENTLABEL=>$label,'global');
  AssignValue(DOCUMENTID=>$id,'global'); });

DefEnvironment('{document}',
	       "<ltx:document label='#label' id='#id'>#body</ltx:document>",
	       beforeDigest=> sub { AssignValue(inPreamble=>0); },
	       afterDigestBegin=>sub {
		 $_[1]->setProperties(label=>LookupValue('DOCUMENTLABEL'),
				      id=>LookupValue('DOCUMENTID')); },
	       afterDigest=> sub { $_[0]->getGullet->flush; return; });

DefConstructor('\longref [] Semiverbatim',
	       "<ltx:ref ?#1(show='#1')(show='typerefnum. title') labelref='#2'/>");
DefConstructor('\longcite [] Semiverbatim',
	       "<ltx:bibref ?#1(show='#1')(show='title (author, year)') bibrefs='#2'/>");

#**********************************************************************
# Numbering scheme that does NOT number sections.
NewCounter('section',      'document',     idprefix=>'S',  nested=>['subsection']);
NewCounter('subsection',   'section',      idprefix=>'SS', nested=>['subsubsection']);
NewCounter('subsubsection','subsection',   idprefix=>'SSS',nested=>['paragraph']);
NewCounter('paragraph',    'subsubsection',idprefix=>'P',  nested=>['subparagraph']);
NewCounter('subparagraph', 'paragraph',    idprefix=>'SP', nested=>['equation','figure','table']);

DefMacro('\thesection',      '');
DefMacro('\thesubsection',   '');
DefMacro('\thesubsubsection','');
DefMacro('\theparagraph',    '');
DefMacro('\thesubparagraph', '');

NewCounter('equation', 'document', idprefix=>'E');
NewCounter('figure',   'document', idprefix=>'F');
NewCounter('table',    'document', idprefix=>'T');
DefMacro('\theequation', '\arabic{equation}');
DefMacro('\thefigure',   '\arabic{figure}');
DefMacro('\thetable',    '\arabic{table}');

NewCounter('@itemizei',   'document',   idprefix=>'I');
NewCounter('@itemizeii',  '@itemizei',  idprefix=>'I');
NewCounter('@itemizeiii', '@itemizeii', idprefix=>'I');
NewCounter('@itemizeiv',  '@itemizeiii',idprefix=>'I');
NewCounter('@itemizev',   '@itemizeiv', idprefix=>'I');
NewCounter('@itemizevi',  '@itemizev',  idprefix=>'I');

NewCounter('enumi',  '@itemizei',   idprefix=>'i');
NewCounter('enumii', '@itemizeii',  idprefix=>'i');
NewCounter('enumiii','@itemizeiii', idprefix=>'i');
NewCounter('enumiv', '@itemizeiv',  idprefix=>'i');
# A couple of more levels, since we use these for ID's!
NewCounter('enumv',  '@itemizev',   idprefix=>'i');
NewCounter('enumvi', '@itemizevi',  idprefix=>'i');

DefMacro('\theenumi',           '\arabic{enumi}');
DefMacro('\theenumii',          '\alph{enumii}');
DefMacro('\theenumiii',         '\roman{enumiii}');
DefMacro('\theenumiv',          '\Alph{enumiv}');

#**********************************************************************
# Frontmatter

#**********************************************************************
# Backmatter.
# Ignore bibliography.
DefConstructor('\bibliography Semiverbatim','');

#**********************************************************************
# New environment from package wrapfigure:
DefEnvironment('{wrapfigure} {} {Dimension}',
	       "<ltx:block class='#float'>#body</ltx:block>",
	       afterDigestBegin=>sub {
		 my $dir = ToString($_[1]->getArg(1));
		 $_[1]->setProperty(float=>($dir eq 'r' ? 'floatright'
					    : ($dir eq 'l' ? 'floatleft'
					       : undef))); });
#**********************************************************************
# Table enhancement

DefConstructor('\thinhline','',
	       afterDigest=>sub { LookupValue('Alignment')->addLine('T'); });

#**********************************************************************
DefConstructor('\VRML Semiverbatim', "<ltx:VRML href='#1'/>");
DefConstructor('\GAMSclass{}',         "<ltx:GAMS class='#1'/>");
DefConstructor('\GAMSpackage{}',       "<ltx:GAMS package='#1'/>");
DefConstructor('\GAMSclasspackage{}{}',"<ltx:GAMS class='#1' package='#2'/>");
DefConstructor('\GAMSmodule{}{}{}',    "<ltx:GAMS package='#1' module='#2' module_id='#3'/>");

#**********************************************************************
1;
