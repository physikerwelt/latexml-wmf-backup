# -*- CPERL -*-
# /=====================================================================\ #
# |  theorem                                                            | #
# | Implementation for LaTeXML                                          | #
# |=====================================================================| #
# | Part of LaTeXML:                                                    | #
# |  Public domain software, produced as part of work done by the       | #
# |  United States Government & not subject to copyright in the US.     | #
# |---------------------------------------------------------------------| #
# | Bruce Miller <bruce.miller@nist.gov>                        #_#     | #
# | http://dlmf.nist.gov/LaTeXML/                              (o o)    | #
# \=========================================================ooo==U==ooo=/ #
use strict;
use LaTeXML::Package;

#**********************************************************************
# \newtheorem in LaTeX.pool
# This is close enough to amsthm to just use it.
RequirePackage('amsthm');

DefMacro('\FMithmInfo',''); 

AssignValue('\thm@headfont' => T_CS('\bfseries'));
AssignValue('\thm@bodyfont' => T_CS('\slshape'));
DefMacro('\theoremheaderfont{}',sub { 
  AssignValue('\thm@headfont' => $_[1]); });

# \th@plain defined in LaTeX.pool, but amsthm redefines to add .

DefPrimitive('\th@plain', sub {
  AssignValue('\thm@titleclasses' => T_OTHER('ltx_runin'));
  return; });

DefPrimitive('\th@break', sub {
  AssignValue('\thm@titleclasses' => Tokens()); # NOT runin!
  return; });

DefPrimitive('\th@change', sub {
  AssignValue('thm@swap' => 'S');
  AssignValue('\thm@titleclasses' => T_OTHER('ltx_runin'));
  return; });

DefPrimitive('\th@margin', sub {
  AssignValue('\thm@titleclasses' => T_OTHER('ltx_runin ltx_outdent'));
  AssignValue('thm@swap' => 'S'); # The number is in margin, so we must also swap
  return; });

DefPrimitive('\th@marginbreak', sub {
  AssignValue('\thm@titleclasses' => T_OTHER('ltx_outdent')); # NOT runin!
  AssignValue('thm@swap' => 'S'); # The number is in margin, so we must also swap
  return; });

DefPrimitive('\th@changebreak', sub {
  AssignValue('\thm@titleclasses' => Tokens()); # NOT runin!
  AssignValue('thm@swap' => 'S');
  return; });

#**********************************************************************
1;
